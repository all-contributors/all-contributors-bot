service: all-contributors-bot
frameworkVersion: '=1.35.1'

plugins:
  - serverless-dotenv-plugin
  - serverless-offline # must be last

custom:
  stage: ${opt:stage, self:provider.stage}
  appId:
    dev: '23544'
    sandbox: '24310'
    prod: '23186'
  logLevel:
    dev: debug
    sandbox: info
    prod: info
  sentryDsn:
    dev: ''
    sandbox: 'https://e950ab524cde4682a740c218c15a461d@sentry.io/1366866'
    prod: 'https://e950ab524cde4682a740c218c15a461d@sentry.io/1366866'

provider:
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  memorySize: 512
  timeout: 60
  environment:
    APP_ID: ${self:custom.appId.${self:custom.stage}}
    LOG_LEVEL: ${self:custom.logLevel.${self:custom.stage}}
    SENTRY_DSN:  ${self:custom.sentryDsn.${self:custom.stage}}
    DISABLE_STATS: true
    INSTALLATION_TOKEN_TTL: 3540
    WEBHOOK_SECRET: ${env:WEBHOOK_SECRET}
    PRIVATE_KEY: ${env:PRIVATE_KEY}
    SERVICE_NAME_AND_STAGE: 'all-contributors-bot-${opt:stage, self:provider.stage}'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: '*'

functions:
  githubWebhook:
    handler: src/serverless-webhook.handler
    events:
      - http:
          path: /
          method: post
          cors: true
  stats:
    handler: src/serverless-stats.handler
    events:
      - http:
          path: /probot/stats
          method: get
          cors: true
  healthCheck:
    handler: src/serverless-health-check.handler
    events:
      - http:
          path: /ping
          method: get
          cors: true
      - http:
          path: /health-check
          method: get
          cors: true

   # Tasks
  processIssueComment:
    handler: src/tasks/processIssueComment/serverless-task.handler
